{"version":3,"file":"redux-easy-actions.umd.js","sources":["../src/EasyAction.ts","../src/Middleware.ts","../src/Helpers.ts","../src/redux-easy-actions.ts"],"sourcesContent":["import {Action, Dispatch} from 'redux'\n\nexport interface EasyActionStatic<OUT, T extends EasyAction<OUT | void>> {\n    new(...args: any[]): T;\n\n    TYPE: string;\n    OnStart: string;\n    OnComplete: string;\n    OnSuccess: string;\n    OnError: string;\n}\n\nexport interface EasyAction<OUT = void> extends Action {\n    doAsync: (dispatch: Dispatch, getState: () => any) => Promise<OUT | undefined>;\n}\n\nexport function EasyAction<OUT = void>(type: string): EasyActionStatic<OUT, EasyAction<OUT>> {\n    class ActionImpl implements Action {\n        public static OnStart = `${type}-start`\n        public static OnComplete = `${type}-complete`\n        public static OnSuccess = `${type}-success`\n        public static OnError = `${type}-error`\n\n        public static TYPE = type\n        public readonly type = type\n    }\n\n    return ActionImpl as EasyActionStatic<OUT, EasyAction<OUT>>\n}\n","import {Middleware} from 'redux'\nimport * as _ from 'lodash'\n\nexport interface EasyActionMiddlewareConfig {\n    dispatchLifecycleActions: boolean\n}\n\nconst defaultConfig: EasyActionMiddlewareConfig = {\n    dispatchLifecycleActions: true,\n}\n\nexport const easyActionsMiddleware = (config?: Partial<EasyActionMiddlewareConfig>): Middleware =>\n    ({dispatch, getState}) => (next) => (action) => {\n        const {\n            dispatchLifecycleActions,\n        } = Object.assign(defaultConfig, config)\n\n        const actionIsAClass = !_.isPlainObject(action)\n        if (actionIsAClass) {\n            const actionAsObject = extractNonFunctionFields(action)\n\n            const isAsynchronousAction = _.isFunction(action.doAsync)\n            if (isAsynchronousAction) {\n                if (dispatchLifecycleActions) {\n                    dispatch({\n                        actionData: actionAsObject,\n                        type: action.constructor.OnStart,\n                    })\n                }\n                return action.doAsync(dispatch, getState)\n                    .then((successResult: any) => dispatchLifecycleActions && dispatch({\n                        actionData: actionAsObject,\n                        type: action.constructor.OnSuccess,\n                        successResult,\n                    }))\n                    .catch((errorResult: any) => dispatchLifecycleActions && dispatch({\n                        actionData: actionAsObject,\n                        type: action.constructor.OnError,\n                        errorResult,\n                    }))\n                    .finally(() => dispatchLifecycleActions && dispatch({\n                        actionData: actionAsObject,\n                        type: action.constructor.OnComplete,\n                    }))\n            } else {\n                return next({...actionAsObject})\n            }\n        } else {\n            return next(action)\n        }\n    }\n\nconst extractNonFunctionFields = (obj: any) => {\n    const cleanedObj: any = {}\n    Object.keys(obj)\n        .filter((key) => !_.isFunction(obj[key]))\n        .forEach((key) => {\n            cleanedObj[key] = obj[key]\n        })\n    return cleanedObj\n}\n","import {Action, AnyAction} from 'redux'\nimport {EasyAction, EasyActionStatic} from './EasyAction'\n\ntype DoAsyncResult<T, U = AsyncActionWithInferredResult<T>> = {\n    [k in keyof U]: U[k]\n}\ntype AsyncActionWithInferredResult<T> = T extends { doAsync: (...args: any[]) => Promise<infer U> } ? NonNullable<U> : never;\n\n\ntype NonFunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? never : K }[keyof T];\ntype DataPropertiesOnly<T> = Pick<T, NonFunctionPropertyNames<T>>;\n\nexport interface StartAction<T extends EasyAction<OUT | void>, OUT> {\n    type: string;\n    actionData: DataPropertiesOnly<T>;\n}\n\nexport interface SuccessAction<T extends EasyAction<OUT | void>, OUT> {\n    type: string;\n    actionData: DataPropertiesOnly<T>;\n    successResult: OUT;\n}\n\nexport interface ErrorAction<T extends EasyAction<OUT | void>, OUT> {\n    type: string;\n    actionData: DataPropertiesOnly<T>;\n    errorResult: any;\n}\n\nexport interface CompleteAction<T extends EasyAction<OUT | void>, OUT> {\n    type: string;\n    actionData: DataPropertiesOnly<T>;\n}\n\n\nexport function isAction<T extends EasyAction<OUT | void>,\n    U extends EasyActionStatic<OUT, T>,\n    OUT extends DoAsyncResult<T>>\n(action: AnyAction, actionClass: (new (...args: any[]) => T) & U)\n    : action is DataPropertiesOnly<T> & Action {\n    return action.type === actionClass.TYPE\n}\n\nexport function beforeStart<T extends EasyAction<OUT | void>,\n    U extends EasyActionStatic<OUT, T>,\n    OUT extends DoAsyncResult<T>>\n(action: AnyAction, actionClass: (new (...args: any[]) => T) & U)\n    : action is StartAction<T, OUT> {\n    return action.type === actionClass.OnStart\n}\n\nexport function afterSuccess<T extends EasyAction<OUT | void>,\n    U extends EasyActionStatic<OUT, T>,\n    OUT extends DoAsyncResult<T>>\n(action: AnyAction, actionClass: (new (...args: any[]) => T) & U)\n    : action is SuccessAction<T, OUT> {\n    return action.type === actionClass.OnSuccess\n}\n\nexport function afterError<T extends EasyAction<OUT | void>,\n    U extends EasyActionStatic<OUT, T>,\n    OUT extends DoAsyncResult<T>>\n(action: AnyAction, actionClass: (new (...args: any[]) => T) & U)\n    : action is ErrorAction<T, OUT> {\n    return action.type === actionClass.OnError\n}\n\nexport function afterComplete<T extends EasyAction<OUT | void>,\n    U extends EasyActionStatic<OUT, T>,\n    OUT extends DoAsyncResult<T>>\n(action: AnyAction, actionClass: (new (...args: any[]) => T) & U)\n    : action is CompleteAction<T, OUT> {\n    return action.type === actionClass.OnComplete\n}\n","// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\n// import \"core-js/fn/array.find\"\n// ...\n\nexport { EasyAction } from './EasyAction'\nexport { easyActionsMiddleware } from './Middleware'\nexport {\n  afterComplete,\n  afterError,\n  afterSuccess,\n  beforeStart,\n  isAction\n} from './Helpers'\n"],"names":["_.isPlainObject","_.isFunction"],"mappings":"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"}